# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2022-01-31 10:21
from __future__ import unicode_literals

import blackwidow.core.mixins.modelmixin.active_inactive_model_mixin
import blackwidow.core.mixins.modelmixin.approval_process_restore_model_mixin
import blackwidow.core.mixins.modelmixin.assignment_tracked_model_mixin
import blackwidow.core.mixins.modelmixin.auditable_model_mixin
import blackwidow.core.mixins.modelmixin.child_container_model_mixin
import blackwidow.core.mixins.modelmixin.coded_model_mixin
import blackwidow.core.mixins.modelmixin.convertible_model_mixin
import blackwidow.core.mixins.modelmixin.details_view_model_mixin
import blackwidow.core.mixins.modelmixin.editable_model_mixin
import blackwidow.core.mixins.modelmixin.exportable_model_mixin
import blackwidow.core.mixins.modelmixin.list_view_model_mixin
import blackwidow.core.mixins.modelmixin.mapped_model_mixin
import blackwidow.core.mixins.modelmixin.prefetch_related_model_mixin
import blackwidow.core.mixins.modelmixin.proxy_model_mixin
import blackwidow.core.mixins.modelmixin.restorable_model_mixin
import blackwidow.core.mixins.modelmixin.restricted_model_mixin
import blackwidow.core.mixins.modelmixin.routed_model_mixin
import blackwidow.core.mixins.modelmixin.searchable_model_mixin
import blackwidow.core.mixins.modelmixin.serializable_model_mixin
import blackwidow.core.mixins.modelmixin.step_back_model_mixin
import blackwidow.core.mixins.modelmixin.versioning_model_mixin
import blackwidow.engine.mixins.modelmixin.queryset_cache_mixin
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tsync_id', models.CharField(blank=True, db_index=True, max_length=55, null=True)),
                ('date_created', models.BigIntegerField(default=0, editable=False)),
                ('last_updated', models.BigIntegerField(default=0, editable=False)),
                ('is_active', models.BooleanField(default=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('is_locked', models.BooleanField(default=False, editable=False)),
                ('creation_flag', models.CharField(default='Created', max_length=200)),
                ('type', models.CharField(db_index=True, default='', max_length=200)),
                ('code', models.CharField(default='', max_length=200)),
                ('deleted_level', models.SmallIntegerField(default=0)),
                ('is_version', models.BooleanField(default=False, editable=False)),
                ('context', models.CharField(max_length=255, null=True)),
                ('key', models.CharField(max_length=255, null=True)),
                ('name', models.CharField(max_length=8000, null=True)),
                ('short_name', models.CharField(default='', max_length=200)),
                ('short_code', models.CharField(default='', max_length=200)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.ConsoleUser')),
                ('entity_meta', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.DomainEntityMeta')),
                ('last_updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.ConsoleUser')),
                ('master_version', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='version_master', to='filemanager.DocumentTag')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Organization')),
            ],
            bases=(blackwidow.core.mixins.modelmixin.list_view_model_mixin.ListViewModelMixin, blackwidow.core.mixins.modelmixin.details_view_model_mixin.DetailsViewModelMixin, blackwidow.core.mixins.modelmixin.serializable_model_mixin.SerializableModelMixin, blackwidow.core.mixins.modelmixin.routed_model_mixin.RoutedModelMixin, blackwidow.core.mixins.modelmixin.auditable_model_mixin.AuditableModelMixin, blackwidow.core.mixins.modelmixin.editable_model_mixin.EditableModelMixin, blackwidow.core.mixins.modelmixin.assignment_tracked_model_mixin.AssignmentTrackedModelMixin, blackwidow.core.mixins.modelmixin.restorable_model_mixin.RestorableModelMixin, blackwidow.core.mixins.modelmixin.proxy_model_mixin.ProxyModelMixin, blackwidow.core.mixins.modelmixin.mapped_model_mixin.MappedModelMixin, blackwidow.core.mixins.modelmixin.coded_model_mixin.CodedModelMixin, blackwidow.core.mixins.modelmixin.child_container_model_mixin.ChildContainerModelMixin, blackwidow.core.mixins.modelmixin.searchable_model_mixin.SearchableModelMixin, blackwidow.core.mixins.modelmixin.restricted_model_mixin.RestrictedModelMixin, blackwidow.core.mixins.modelmixin.convertible_model_mixin.MutableModelMixin, blackwidow.core.mixins.modelmixin.convertible_model_mixin.ApprovableModelMixin, blackwidow.core.mixins.modelmixin.convertible_model_mixin.RejectableModelMixin, blackwidow.core.mixins.modelmixin.active_inactive_model_mixin.ActiveInactiveModelMixin, blackwidow.core.mixins.modelmixin.step_back_model_mixin.StepBackExecuteModelMixin, blackwidow.core.mixins.modelmixin.approval_process_restore_model_mixin.ApprovalRestoreModelMixin, blackwidow.engine.mixins.modelmixin.queryset_cache_mixin.QuerysetCacheMixin, blackwidow.core.mixins.modelmixin.exportable_model_mixin.ExportableModelMixin, blackwidow.core.mixins.modelmixin.prefetch_related_model_mixin.PrefetchRelatedModelMixin, blackwidow.core.mixins.modelmixin.versioning_model_mixin.VersioningModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='FileUploadManager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tsync_id', models.CharField(blank=True, db_index=True, max_length=55, null=True)),
                ('date_created', models.BigIntegerField(default=0, editable=False)),
                ('last_updated', models.BigIntegerField(default=0, editable=False)),
                ('is_active', models.BooleanField(default=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('is_locked', models.BooleanField(default=False, editable=False)),
                ('creation_flag', models.CharField(default='Created', max_length=200)),
                ('type', models.CharField(db_index=True, default='', max_length=200)),
                ('code', models.CharField(default='', max_length=200)),
                ('deleted_level', models.SmallIntegerField(default=0)),
                ('is_version', models.BooleanField(default=False, editable=False)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.ConsoleUser')),
                ('entity_meta', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.DomainEntityMeta')),
                ('last_updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.ConsoleUser')),
                ('master_version', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='version_master', to='filemanager.FileUploadManager')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Organization')),
            ],
            bases=(blackwidow.core.mixins.modelmixin.list_view_model_mixin.ListViewModelMixin, blackwidow.core.mixins.modelmixin.details_view_model_mixin.DetailsViewModelMixin, blackwidow.core.mixins.modelmixin.serializable_model_mixin.SerializableModelMixin, blackwidow.core.mixins.modelmixin.routed_model_mixin.RoutedModelMixin, blackwidow.core.mixins.modelmixin.auditable_model_mixin.AuditableModelMixin, blackwidow.core.mixins.modelmixin.editable_model_mixin.EditableModelMixin, blackwidow.core.mixins.modelmixin.assignment_tracked_model_mixin.AssignmentTrackedModelMixin, blackwidow.core.mixins.modelmixin.restorable_model_mixin.RestorableModelMixin, blackwidow.core.mixins.modelmixin.proxy_model_mixin.ProxyModelMixin, blackwidow.core.mixins.modelmixin.mapped_model_mixin.MappedModelMixin, blackwidow.core.mixins.modelmixin.coded_model_mixin.CodedModelMixin, blackwidow.core.mixins.modelmixin.child_container_model_mixin.ChildContainerModelMixin, blackwidow.core.mixins.modelmixin.searchable_model_mixin.SearchableModelMixin, blackwidow.core.mixins.modelmixin.restricted_model_mixin.RestrictedModelMixin, blackwidow.core.mixins.modelmixin.convertible_model_mixin.MutableModelMixin, blackwidow.core.mixins.modelmixin.convertible_model_mixin.ApprovableModelMixin, blackwidow.core.mixins.modelmixin.convertible_model_mixin.RejectableModelMixin, blackwidow.core.mixins.modelmixin.active_inactive_model_mixin.ActiveInactiveModelMixin, blackwidow.core.mixins.modelmixin.step_back_model_mixin.StepBackExecuteModelMixin, blackwidow.core.mixins.modelmixin.approval_process_restore_model_mixin.ApprovalRestoreModelMixin, blackwidow.engine.mixins.modelmixin.queryset_cache_mixin.QuerysetCacheMixin, blackwidow.core.mixins.modelmixin.exportable_model_mixin.ExportableModelMixin, blackwidow.core.mixins.modelmixin.prefetch_related_model_mixin.PrefetchRelatedModelMixin, blackwidow.core.mixins.modelmixin.versioning_model_mixin.VersioningModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='UploadFileObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tsync_id', models.CharField(blank=True, db_index=True, max_length=55, null=True)),
                ('date_created', models.BigIntegerField(default=0, editable=False)),
                ('last_updated', models.BigIntegerField(default=0, editable=False)),
                ('is_active', models.BooleanField(default=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('is_locked', models.BooleanField(default=False, editable=False)),
                ('creation_flag', models.CharField(default='Created', max_length=200)),
                ('type', models.CharField(db_index=True, default='', max_length=200)),
                ('code', models.CharField(default='', max_length=200)),
                ('deleted_level', models.SmallIntegerField(default=0)),
                ('is_version', models.BooleanField(default=False, editable=False)),
                ('title', models.CharField(default=None, max_length=8000, null=True)),
                ('category', models.CharField(default='', max_length=254, null=True)),
                ('author', models.CharField(default='', max_length=254, null=True)),
                ('original_name', models.CharField(default=None, max_length=8000, null=True)),
                ('version', models.CharField(default=None, max_length=254, null=True)),
                ('published_date', models.DateField(null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.ConsoleUser')),
                ('entity_meta', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.DomainEntityMeta')),
                ('fileobject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.FileObject')),
                ('last_updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.ConsoleUser')),
                ('master_version', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='version_master', to='filemanager.UploadFileObject')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Organization')),
                ('tags', models.ManyToManyField(to='filemanager.DocumentTag')),
            ],
            bases=(blackwidow.core.mixins.modelmixin.list_view_model_mixin.ListViewModelMixin, blackwidow.core.mixins.modelmixin.details_view_model_mixin.DetailsViewModelMixin, blackwidow.core.mixins.modelmixin.serializable_model_mixin.SerializableModelMixin, blackwidow.core.mixins.modelmixin.routed_model_mixin.RoutedModelMixin, blackwidow.core.mixins.modelmixin.auditable_model_mixin.AuditableModelMixin, blackwidow.core.mixins.modelmixin.editable_model_mixin.EditableModelMixin, blackwidow.core.mixins.modelmixin.assignment_tracked_model_mixin.AssignmentTrackedModelMixin, blackwidow.core.mixins.modelmixin.restorable_model_mixin.RestorableModelMixin, blackwidow.core.mixins.modelmixin.proxy_model_mixin.ProxyModelMixin, blackwidow.core.mixins.modelmixin.mapped_model_mixin.MappedModelMixin, blackwidow.core.mixins.modelmixin.coded_model_mixin.CodedModelMixin, blackwidow.core.mixins.modelmixin.child_container_model_mixin.ChildContainerModelMixin, blackwidow.core.mixins.modelmixin.searchable_model_mixin.SearchableModelMixin, blackwidow.core.mixins.modelmixin.restricted_model_mixin.RestrictedModelMixin, blackwidow.core.mixins.modelmixin.convertible_model_mixin.MutableModelMixin, blackwidow.core.mixins.modelmixin.convertible_model_mixin.ApprovableModelMixin, blackwidow.core.mixins.modelmixin.convertible_model_mixin.RejectableModelMixin, blackwidow.core.mixins.modelmixin.active_inactive_model_mixin.ActiveInactiveModelMixin, blackwidow.core.mixins.modelmixin.step_back_model_mixin.StepBackExecuteModelMixin, blackwidow.core.mixins.modelmixin.approval_process_restore_model_mixin.ApprovalRestoreModelMixin, blackwidow.engine.mixins.modelmixin.queryset_cache_mixin.QuerysetCacheMixin, blackwidow.core.mixins.modelmixin.exportable_model_mixin.ExportableModelMixin, blackwidow.core.mixins.modelmixin.prefetch_related_model_mixin.PrefetchRelatedModelMixin, blackwidow.core.mixins.modelmixin.versioning_model_mixin.VersioningModelMixin, models.Model),
        ),
    ]
